/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: danmars (https://sketchfab.com/danmars)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/xbot-4000-68984079c93048d88d062add5526ba29
Title: XBOT 4000
*/

import * as THREE from "three";
import { ForwardedRef, forwardRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ROBOT_LOWPOLY_lambert2_0: THREE.Mesh;
  };
  materials: {
    lambert2: THREE.MeshStandardMaterial;
  };
};

const Xbot = (
  props: JSX.IntrinsicElements["group"],
  ref: ForwardedRef<THREE.Group>,
) => {
  const { nodes, materials } = useGLTF("/assets/xbot_4000.glb") as GLTFResult;

  nodes.ROBOT_LOWPOLY_lambert2_0.geometry.center();
  nodes.ROBOT_LOWPOLY_lambert2_0.geometry.translate(0, 30.5, 0);

  return (
    <group {...props} ref={ref} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.ROBOT_LOWPOLY_lambert2_0.geometry}
        material={materials.lambert2}
      />
    </group>
  );
};

useGLTF.preload("/assets/xbot_4000.glb");

export default forwardRef(Xbot);
